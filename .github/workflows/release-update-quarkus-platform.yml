name: Update quarkus-platform

on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: 'QOSDK tag to publish on platform'
        required: true
    secrets:
      qosdk-bot-token:
        required: true
  workflow_dispatch:
    inputs:
      tag:
        description: 'QOSDK tag to publish on platform'
        type: string
        required: true

jobs:
  prepare-platform-pr:
    name: Prepare Platform Update
    runs-on: ubuntu-latest

    outputs:
      released: ${{steps.wait-for-bom.outputs.published}}
      quarkus-platform-branch: ${{steps.versions.outputs.quarkus_platform_branch}}
      needs-main-pr: ${{ steps.versions.outputs.needs_main_pr == 'true' }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.inputs.tag || github.ref_name}}

      - uses: xstefank/project-metadata-action@main
        name: Retrieve project metadata
        id: metadata
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          metadata-file-path: '.github/project.yml'
          local-file: true

      - name: Gather versions
        id: versions
        run: |
          echo "My quarkus platform branches -> ${{steps.metadata.outputs.quarkus-platform-branches}}."
#          quarkus_platform_branches=$(echo $JSON | jq -c '.release.["quarkus-platform-branches"]')
          echo "quarkus_platform_branch=testing" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT


#          quarkus_version=$(./mvnw help:evaluate -Dexpression=quarkus.version -q -DforceStdout)
#          quarkus_major=$(echo ${quarkus_version} | cut -d . -f 1,2)
#          echo "QOSDK-defined Quarkus version: ${quarkus_version} (-> major: ${quarkus_major})"
#
#          quarkus_platform_version=$(curl -s https://registry.quarkus.io/client/platforms | jq -r '.platforms[0]."current-stream-id"')
#          echo "Current platform-defined Quarkus major version: ${quarkus_platform_version}"
#
#          quarkus_platform_branch=${quarkus_major}
#          if [ "${quarkus_major}" = "${quarkus_platform_version}" ]; then
#            quarkus_platform_branch="${quarkus_platform_version}"
#          fi
#          echo "quarkus_platform_branch=${quarkus_platform_branch}" >> $GITHUB_OUTPUT
#
#          if [ "${quarkus_platform_branch}" = "main" ]; then
#            echo "quarkus-platform update will target main"
#            echo "need_main_pr=true" >> $GITHUB_OUTPUT
#          else
#            echo "quarkus-platform update will target ${quarkus_platform_branch}"
#            echo "Check if quarkus-platform also needs to be updated on main"
#            if [ "${{ github.base_ref }}" = "main" ]; then
#              echo "PR targets main so assume quarkus-platform main also needs to be updated"
#              echo "need_main_pr=true" >> $GITHUB_OUTPUT
#            else
#              echo "No need for PR on quarkus-platform main"
#              echo "need_main_pr=false" >> $GITHUB_OUTPUT
#            fi
#          fi

#      - name: Wait for QOSDK BOM to be published
#        uses: quarkusio/monitor-artifact-publication-action@main
#        id: wait-for-bom
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          group-id: io.quarkiverse.operatorsdk
#          artifact-id: quarkus-operator-sdk-bom
#          version: ${{github.event.inputs.tag || github.ref_name}}
#          initial-delay: 0
#          poll-delay: 1
#          poll-iterations: 10
#          post-delay: 0

#  update-quarkus-platform-branch:
#    uses: ./.github/workflows/release-quarkus-platform-pr.yml
#    needs:
#      - prepare-platform-pr
#    with:
#      qosdk-version: ${{github.event.inputs.tag || github.ref_name}}
#      quarkus-platform-branch: ${{needs.prepare-platform-pr.outputs.quarkus-platform-branch}}
#    secrets:
#      qosdk-bot-token: ${{ secrets.QOSDK_BOT_TOKEN }}
#
#  update-quarkus-platform-main-if-needed:
#    needs:
#      - prepare-platform-pr
#    if: ${{ needs.prepare-platform-pr.outputs.needs-main-pr && needs.prepare-platform-pr.outputs.quarkus-platform-branch != 'main' }}
#    uses: ./.github/workflows/release-quarkus-platform-pr.yml
#    with:
#      qosdk-version: ${{github.event.inputs.tag || github.ref_name}}
#    secrets:
#      qosdk-bot-token: ${{ secrets.QOSDK_BOT_TOKEN }}